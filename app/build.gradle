plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.android.secrets.gradle)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.serialization)
    alias(libs.plugins.kotlin.navigation.safeargs)
    alias(libs.plugins.kotlin.ksp)
    alias(libs.plugins.google.services)
    alias(libs.plugins.google.firebase.crashlytics)
    id 'kotlin-parcelize'
}

android {
    namespace 'com.statussungai.android'
    compileSdk 35

    defaultConfig {
        applicationId 'com.statussungai.android'
        minSdk 23
        targetSdk 35
        versionCode 3
        versionName '1.0.2'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled = true

        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        buildConfig = true
        viewBinding = true
    }
}

dependencies {

    //    AndroidX
    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.appcompat)
    implementation(libs.androidx.activity.ktx)
    implementation(libs.androidx.fragment.ktx)

    //    Presentation
    implementation(libs.material)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.cardview)
    implementation(libs.androidx.recyclerview)
    implementation(libs.glide)
    ksp(libs.glide.ksp)

    //    Testing
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)

    //    Firebase
    implementation(platform(libs.firebase.bom))

    //    Logging
    implementation(libs.bundles.logging)

    //    Services
    implementation(libs.bundles.google.services)

    //    DI
    implementation(platform(libs.koin.bom))
    implementation(libs.bundles.koin)

    //    Lifecycle
    implementation(libs.bundles.lifecycle)

    //    Coroutine
    implementation(libs.bundles.coroutine)

    //    Navigation
    implementation(libs.bundles.navigation)
    implementation(libs.androidx.viewpager2)

    //    Serialization
    implementation(libs.kotlinx.serialization.json)

    //    Network
    implementation(libs.bundles.network)

    //    Database
    implementation(libs.bundles.room)
    ksp(libs.androidx.room.compiler)

    //    Datastore
    implementation(libs.androidx.datastore.preferences)

    //    Pagination
    implementation(libs.androidx.paging.runtime)

    //    Presentation
    implementation(libs.material)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.cardview)
    implementation(libs.androidx.recyclerview)
    implementation(libs.androidx.core.splashscreen)
    implementation(libs.glide)
    ksp(libs.glide.ksp)
    implementation(libs.circleimageview)
    implementation(libs.blurview)
    implementation(libs.pdf.viewer)

    coreLibraryDesugaring(libs.desugar.jdk.libs)
}

secrets {
    // Optionally specify a different file name containing your secrets.
    // The plugin defaults to "local.properties"
    propertiesFileName = "local.properties"

    // A properties file containing default secret values. This file can be
    // checked in version control.
    defaultPropertiesFileName = "local.defaults.properties"

    // Configure which keys should be ignored by the plugin by providing regular expressions.
    // "sdk.dir" is ignored by default.
    ignoreList.add("sdk.*")       // Ignore all keys matching the regexp "sdk.*"
}